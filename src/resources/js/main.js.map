{"version":3,"file":"js/main.js","mappings":"yIAEA,MAAeA,EACbC,YAA6BC,GAAA,KAAAA,MAAAA,EAC3BC,KAAKC,cAAcC,UAAUH,EAAMI,WACrC,CAEUF,cACR,OAAOG,EAAE,wCACX,EAyBO,EAAAC,qBAtBT,cAAmCR,EACjCC,YAA6BC,GAC3BO,MAAMP,GADqB,KAAAA,MAAAA,CAE7B,CAEUE,cACR,MAAMM,EAAiBP,KAAKD,MAAMI,WAAWK,QAAQ,oBAAoBC,KAAK,aAC9E,OAAOH,MAAML,cAAcS,KAAK,gBAAgBH,gBAClD,GAc6B,EAAAI,kBAX/B,cAAgCd,EAC9BC,YAA6BC,GAC3BO,MAAMP,GADqB,KAAAA,MAAAA,CAE7B,CAEUE,cACR,MAAMM,EAAiBP,KAAKD,MAAMI,WAAWK,QAAQ,oBAAoBC,KAAK,aAC9E,OAAOH,MAAML,cAAcS,KAAK,aAAaH,gBAC/C,E,GC9BEK,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,C,MCtBA,eAOMG,EAAa,GAEnBC,QAAQC,GAAGC,MAAMC,YAAa,aAAcC,IAC1CL,EAAWM,KAAK,IAAI,EAAArB,qBAAqBoB,EAAEE,QAAQ,SAG3B,KAAZ,OAAHC,UAAG,IAAHA,SAAG,EAAHA,IAAKC,QACdR,QAAQC,GAAGM,IAAIC,MAAO,aAAcJ,IAClCL,EAAWM,KAAK,IAAI,EAAAf,kBAAkBc,EAAEE,QAAQ,G","sources":["webpack://craft-block-batch-actions/./client/src/scripts/BlockBatchActionBar.ts","webpack://craft-block-batch-actions/webpack/bootstrap","webpack://craft-block-batch-actions/./client/src/scripts/main.ts"],"sourcesContent":["import { BlockInput } from './types/BlockInput'\n\nabstract class BlockBatchActionBar {\n  constructor (public readonly input: BlockInput) {\n    this.generateBar().prependTo(input.$container)\n  }\n\n  protected generateBar (): JQuery {\n    return $('<div class=\"block-batch-action-bar\"/>')\n  }\n}\n\nclass MatrixBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: BlockInput) {\n    super(input)\n  }\n\n  protected generateBar (): JQuery {\n    const handle: string = this.input.$container.closest('[data-attribute]').data('attribute')\n    return super.generateBar().text(`Matrix field ${handle} initialised`)\n  }\n}\n\nclass NeoBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: BlockInput) {\n    super(input)\n  }\n\n  protected generateBar (): JQuery {\n    const handle: string = this.input.$container.closest('[data-attribute]').data('attribute')\n    return super.generateBar().text(`Neo field ${handle} initialised`)\n  }\n}\n\nexport { MatrixBatchActionBar, NeoBatchActionBar }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { MatrixBatchActionBar, NeoBatchActionBar } from './BlockBatchActionBar'\nimport { BlockInput } from './types/BlockInput'\n\ninterface Event {\n  target: BlockInput\n}\n\nconst actionBars = []\n\nGarnish.on(Craft.MatrixInput, 'afterInit', (e: Event) => {\n  actionBars.push(new MatrixBatchActionBar(e.target))\n})\n\nif (typeof Neo?.Input !== 'undefined') {\n  Garnish.on(Neo.Input, 'afterInit', (e: Event) => {\n    actionBars.push(new NeoBatchActionBar(e.target))\n  })\n}\n"],"names":["BlockBatchActionBar","constructor","input","this","generateBar","prependTo","$container","$","MatrixBatchActionBar","super","handle","closest","data","text","NeoBatchActionBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","actionBars","Garnish","on","Craft","MatrixInput","e","push","target","Neo","Input"],"sourceRoot":""}