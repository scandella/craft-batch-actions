{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://craft-block-batch-actions/./client/src/scripts/BlockBatchActionBar.ts","webpack://craft-block-batch-actions/webpack/bootstrap","webpack://craft-block-batch-actions/webpack/runtime/make namespace object","webpack://craft-block-batch-actions/./client/src/scripts/main.ts"],"sourcesContent":["import { InputBlock, MatrixInputBlock, NeoInputBlock } from './types/InputBlock'\nimport { InputField, NeoInputField } from './types/InputField'\n\ninterface ActivateEvent {\n  preventDefault: () => void\n}\n\nabstract class BlockBatchActionBar {\n  public $bar: JQuery\n  public $selectContainer: JQuery\n  public $select: JQuery\n  public $buttons: JQuery\n  public $menuContainer: JQuery\n  public $menu: JQuery\n  protected addBlockEvent: string\n  private _$buttons: Record<string, JQuery> = {}\n\n  constructor (\n    public readonly input: InputField,\n    protected readonly blockClass: string,\n    protected readonly blockSelectedClass: string\n  ) {\n    this.$bar = $('<div class=\"block-batch-action-bar\"/>').prependTo(input.$container)\n    this._initSelect()\n    this.$buttons = this._generateButtons().appendTo(this.$bar)\n    this.$menuContainer = this._generateMenu().appendTo(this.$bar)\n\n    const $actions = this.$bar.add(this.$menu)\n\n    this.supportedActions().forEach(([label, _icon, _check]) => {\n      const lowerCaseLabel = label.toLowerCase()\n      this._$buttons[lowerCaseLabel] = $actions.find(`[data-bba-bn=\"button.${lowerCaseLabel}\"]`)\n      this._$buttons[lowerCaseLabel].on('activate', (e: ActivateEvent) => {\n        e.preventDefault()\n        const actionMethod = this[lowerCaseLabel as keyof BlockBatchActionBar]\n\n        if (typeof actionMethod === 'function') {\n          actionMethod.bind(this)(this.getSelectedBlocks())\n          this._refreshButtons()\n        }\n      })\n    })\n\n    this._refreshButtons()\n  }\n\n  protected supportedActions (): Array<[string, string, Function]> {\n    return [\n      ['Expand', 'expand', this.isBlockCollapsed.bind(this)],\n      ['Collapse', 'collapse', this.isBlockExpanded.bind(this)],\n      ['Enable', 'enabled', this.isBlockDisabled.bind(this)],\n      ['Disable', 'disabled', this.isBlockEnabled.bind(this)],\n      ['Delete', 'remove', (_: JQuery) => true]\n    ]\n  }\n\n  protected abstract isBlockExpanded ($block: JQuery): boolean\n\n  protected isBlockCollapsed ($block: JQuery): boolean {\n    return !this.isBlockExpanded($block)\n  }\n\n  protected abstract isBlockEnabled ($block: JQuery): boolean\n\n  protected isBlockDisabled ($block: JQuery): boolean {\n    return !this.isBlockEnabled($block)\n  }\n\n  private _initSelect (): void {\n    this.$selectContainer = $('<div/>', {\n      class: 'block-batch-action-bar_select',\n      role: 'checkbox',\n      tabindex: 0,\n      'aria-label': 'Select all',\n      'aria-checked': 'false'\n    }).appendTo(this.$bar)\n    this.$select = $('<div class=\"checkbox\">').appendTo(this.$selectContainer)\n    let handlingCheckbox = false\n    let initialised = false\n\n    const selectHandler: (e: JQuery.Event) => void = (e) => {\n      if (!initialised) {\n        // The add block event is only initialised on the first check of the select checkbox, since\n        // if it isn't checked then any new block doesn't need to be checked\n        this.input.on(this.addBlockEvent, (e: any) => {\n          const $block = e.$block ?? e.block.$container\n          $block.toggleClass(this.input.blockSelect.settings.selectedClass, this.$select.hasClass('checked'))\n        })\n        initialised = true\n      }\n\n      handlingCheckbox = true\n      this.$select.toggleClass('checked').removeClass('indeterminate')\n      const selectAll = this.$select.hasClass('checked')\n\n      if (selectAll) {\n        this.input.blockSelect.selectAll()\n        this.$selectContainer.attr('aria-checked', 'true')\n      } else {\n        this.input.blockSelect.deselectAll()\n        this.$selectContainer.attr('aria-checked', 'false')\n      }\n    }\n\n    this.$selectContainer.on('mousedown', (e) => {\n      if (e.which === Garnish.PRIMARY_CLICK) {\n        selectHandler(e)\n      }\n    })\n    this.$selectContainer.on('keydown', (e) => {\n      if (e.keyCode === Garnish.SPACE_KEY) {\n        e.preventDefault()\n        selectHandler(e)\n      }\n    })\n\n    this.input.blockSelect.on('selectionChange', (_: Event) => {\n      if (!handlingCheckbox) {\n        // Any manual change to block selection invalidates the select all state\n        this.$select.removeClass('checked')\n\n        const anyBlocksChecked = this.input.blockSelect.$selectedItems.length > 0\n        this.$select.toggleClass('indeterminate', anyBlocksChecked)\n        this.$selectContainer.attr('aria-checked', anyBlocksChecked ? 'mixed' : 'false')\n      } else {\n        // Set our checkbox handling as being complete\n        handlingCheckbox = false\n      }\n\n      this._refreshButtons()\n    })\n  }\n\n  private _refreshButtons (): void {\n    const actions: Record<string, any> = {}\n    const labels: string[] = []\n\n    this.supportedActions().forEach(([label, icon, check]) => {\n      labels.push(label)\n      actions[label] = {\n        icon,\n        check,\n        enable: false\n      }\n    })\n\n    this.input.blockSelect.$selectedItems.each((_: number, block: HTMLElement) => {\n      const $block = $(block)\n      labels.forEach((label) => {\n        actions[label].enable ||= actions[label].check($block)\n      })\n    })\n\n    labels.forEach((label) => {\n      this._$buttons[label.toLowerCase()].toggleClass('disabled', actions[label].enable === false)\n    })\n  }\n\n  private _generateButtons (): JQuery {\n    const $bar = $('<div class=\"btngroup\"/>')\n    this.supportedActions()\n      .forEach(([label, icon, _]) => this._generateAction(label, icon, 'btn').appendTo($bar))\n\n    return $bar\n  }\n\n  private _generateMenu (): JQuery {\n    const $container = $('<div class=\"block-batch-action-bar_menu hidden\"/>')\n    const $button: any = $('<button type=\"button\" class=\"btn settings icon menubtn\">Actions</button>')\n      .appendTo($container)\n    this.$menu = $('<div class=\"menu\"/>')\n      .appendTo($container)\n    const $ul = $('<ul class=\"padded\"/>')\n      .appendTo(this.$menu)\n\n    this.supportedActions()\n      .forEach(([label, icon]) => $('<li/>').append(this._generateAction(label, icon)).appendTo($ul))\n\n    $button.menubtn()\n    let buttonsWidth = this.$buttons.width() ?? 0\n    this.$bar.on('resize', () => {\n      buttonsWidth ||= this.$buttons.width() ?? 0\n      const isMobile = (this.$bar.width() ?? 0) < buttonsWidth\n      this.$buttons.toggleClass('hidden', isMobile)\n      $container.toggleClass('hidden', !isMobile)\n    })\n\n    return $container\n  }\n\n  private _generateAction (label: string, icon: string|null, buttonClasses?: string): JQuery {\n    const isButton = typeof buttonClasses !== 'undefined'\n    const lowerCaseLabel = label.toLowerCase()\n    icon ??= lowerCaseLabel\n    const $action = $(`<${isButton ? 'button' : 'a'}/>`)\n      .attr({\n        'aria-label': label,\n        'data-bba-bn': `button.${lowerCaseLabel}`,\n        'data-icon': icon\n      })\n      .text(label)\n\n    if (isButton) {\n      $action.addClass(buttonClasses)\n    }\n\n    return $action\n  }\n\n  protected abstract getSelectedBlocks (): InputBlock[]\n\n  public expand (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.expand())\n  }\n\n  public collapse (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.collapse())\n  }\n\n  public abstract enable (blocks: InputBlock[]): void\n\n  public abstract disable (blocks: InputBlock[]): void\n\n  public abstract delete (blocks: InputBlock[]): void\n}\n\nclass MatrixBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: InputField) {\n    super(input, 'matrixblock', 'sel')\n    super.addBlockEvent = 'blockAdded'\n  }\n\n  protected isBlockExpanded ($block: JQuery): boolean {\n    return !$block.hasClass('collapsed')\n  }\n\n  protected isBlockEnabled ($block: JQuery): boolean {\n    return !$block.hasClass('disabled')\n  }\n\n  protected getSelectedBlocks (): MatrixInputBlock[] {\n    return this.input.$container\n      .find(`.${this.blockClass}.${this.blockSelectedClass}`)\n      .map((_, blockEl) => $(blockEl).data('block'))\n      .get()\n  }\n\n  public enable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.enable())\n  }\n\n  public disable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.disable())\n  }\n\n  public delete (blocks: MatrixInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => block.selfDestruct())\n    }\n  }\n}\n\nclass NeoBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: NeoInputField) {\n    super(input, 'ni_block', 'is-selected')\n    super.addBlockEvent = 'addBlock'\n  }\n\n  protected isBlockExpanded ($block: JQuery): boolean {\n    return $block.hasClass('is-expanded')\n  }\n\n  protected isBlockEnabled ($block: JQuery): boolean {\n    return $block.hasClass('is-enabled')\n  }\n\n  protected getSelectedBlocks (): NeoInputBlock[] {\n    return this.input.getBlocks().filter((block) => block.isSelected())\n  }\n\n  public enable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => !block.isEnabled())?.enable()\n  }\n\n  public disable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => block.isEnabled())?.disable()\n  }\n\n  public delete (blocks: NeoInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => this.input.removeBlock(block))\n    }\n  }\n}\n\nexport { MatrixBatchActionBar, NeoBatchActionBar }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { MatrixBatchActionBar, NeoBatchActionBar } from './BlockBatchActionBar'\nimport { InputField, NeoInputField } from './types/InputField'\nimport '../styles/main.scss'\n\ninterface MatrixAfterInitEvent {\n  target: InputField\n}\n\ninterface NeoAfterInitEvent {\n  target: NeoInputField\n}\n\nconst actionBars = []\n\nGarnish.on(Craft.MatrixInput, 'afterInit', (e: MatrixAfterInitEvent) => {\n  actionBars.push(new MatrixBatchActionBar(e.target))\n})\n\nif (typeof Neo?.Input !== 'undefined') {\n  Garnish.on(Neo.Input, 'afterInit', (e: NeoAfterInitEvent) => {\n    actionBars.push(new NeoBatchActionBar(e.target))\n  })\n}\n"],"names":["BlockBatchActionBar","constructor","input","blockClass","blockSelectedClass","_$buttons","this","$bar","$","prependTo","$container","_initSelect","$buttons","_generateButtons","appendTo","$menuContainer","_generateMenu","$actions","add","$menu","supportedActions","forEach","label","_icon","_check","lowerCaseLabel","toLowerCase","find","on","e","preventDefault","actionMethod","bind","getSelectedBlocks","_refreshButtons","isBlockCollapsed","isBlockExpanded","isBlockDisabled","isBlockEnabled","_","$block","$selectContainer","class","role","tabindex","$select","handlingCheckbox","initialised","selectHandler","addBlockEvent","block","toggleClass","blockSelect","settings","selectedClass","hasClass","removeClass","selectAll","attr","deselectAll","which","Garnish","PRIMARY_CLICK","keyCode","SPACE_KEY","anyBlocksChecked","$selectedItems","length","actions","labels","icon","check","push","enable","each","_generateAction","$button","$ul","append","menubtn","buttonsWidth","width","isMobile","buttonClasses","isButton","$action","text","addClass","expand","blocks","collapse","MatrixBatchActionBar","super","map","blockEl","data","get","disable","delete","window","confirm","selfDestruct","NeoBatchActionBar","getBlocks","filter","isSelected","isEnabled","removeBlock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","actionBars","Craft","MatrixInput","target","Neo","Input"],"sourceRoot":""}