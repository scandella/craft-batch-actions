{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://craft-block-batch-actions/./client/src/scripts/BlockBatchActionBar.ts","webpack://craft-block-batch-actions/webpack/bootstrap","webpack://craft-block-batch-actions/webpack/runtime/make namespace object","webpack://craft-block-batch-actions/./client/src/scripts/main.ts"],"sourcesContent":["import { InputBlock, MatrixInputBlock, NeoInputBlock } from './types/InputBlock'\nimport { InputField, NeoInputField } from './types/InputField'\n\ninterface ActivateEvent {\n  preventDefault: () => void\n}\n\nabstract class BlockBatchActionBar {\n  public $bar: JQuery\n  public $selectCheckbox: JQuery\n  public $buttons: JQuery\n  public $menuContainer: JQuery\n  public $menu: JQuery\n  protected addBlockEvent: string\n\n  constructor (\n    public readonly input: InputField,\n    protected readonly blockClass: string,\n    protected readonly blockSelectedClass: string\n  ) {\n    this.$bar = $('<div class=\"block-batch-action-bar\"/>').prependTo(input.$container)\n    this.$selectCheckbox = this._generateSelectCheckbox().appendTo(this.$bar)\n    this.$buttons = this._generateButtons().appendTo(this.$bar)\n    this.$menuContainer = this._generateMenu().appendTo(this.$bar)\n\n    const $actions = this.$bar.add(this.$menu)\n    $actions.find('[data-bba-bn=\"button.expand\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.expand(this.getSelectedBlocks())\n    })\n    $actions.find('[data-bba-bn=\"button.collapse\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.collapse(this.getSelectedBlocks())\n    })\n    $actions.find('[data-bba-bn=\"button.enable\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.enable(this.getSelectedBlocks())\n    })\n    $actions.find('[data-bba-bn=\"button.disable\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.disable(this.getSelectedBlocks())\n    })\n    $actions.find('[data-bba-bn=\"button.delete\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.delete(this.getSelectedBlocks())\n    })\n  }\n\n  protected supportedActions (): Array<[string, string]> {\n    return [\n      ['Expand', 'expand'],\n      ['Collapse', 'collapse'],\n      ['Enable', 'enabled'],\n      ['Disable', 'disabled'],\n      ['Delete', 'remove']\n    ]\n  }\n\n  private _generateSelectCheckbox (): JQuery {\n    const $checkbox = $('<div class=\"checkbox\">')\n    let handlingCheckbox = false\n    let initialised = false\n\n    $checkbox.on('mousedown', (e) => {\n      if (e.which === Garnish.PRIMARY_CLICK) {\n        if (!initialised) {\n          // Initialise the add block event\n          this.input.on(this.addBlockEvent, (e: any) => {\n            const $block = e.$block ?? e.block.$container\n            $block.addClass(this.input.blockSelect.settings.selectedClass)\n          })\n          initialised = true\n        }\n\n        handlingCheckbox = true\n        $checkbox.toggleClass('checked')\n        const selectAll = $checkbox.hasClass('checked')\n\n        if (selectAll) {\n          this.input.blockSelect.selectAll()\n        } else {\n          this.input.blockSelect.deselectAll()\n        }\n      }\n    })\n\n    this.input.blockSelect.on('selectionChange', (_: Event) => {\n      if (!handlingCheckbox) {\n        // Any manual change to block selection invalidates the select all state\n        $checkbox.removeClass('checked')\n      } else {\n        // Set our checkbox handling as being complete\n        handlingCheckbox = false\n      }\n    })\n\n    return $checkbox\n  }\n\n  private _generateButtons (): JQuery {\n    const $bar = $('<div class=\"btngroup\"/>')\n    this.supportedActions()\n      .forEach(([label, icon]) => this._generateAction(label, icon, 'btn').appendTo($bar))\n\n    return $bar\n  }\n\n  private _generateMenu (): JQuery {\n    const $container = $('<div class=\"block-batch-action-bar_menu hidden\"/>')\n    const $button: any = $('<button type=\"button\" class=\"btn settings icon menubtn\">Actions</button>')\n      .appendTo($container)\n    this.$menu = $('<div class=\"menu\"/>')\n      .appendTo($container)\n    const $ul = $('<ul class=\"padded\"/>')\n      .appendTo(this.$menu)\n\n    this.supportedActions()\n      .forEach(([label, icon]) => $('<li/>').append(this._generateAction(label, icon)).appendTo($ul))\n\n    $button.menubtn()\n    let buttonsWidth = this.$buttons.width() ?? 0\n    this.$bar.on('resize', () => {\n      buttonsWidth ||= this.$buttons.width() ?? 0\n      const isMobile = (this.$bar.width() ?? 0) < buttonsWidth\n      this.$buttons.toggleClass('hidden', isMobile)\n      $container.toggleClass('hidden', !isMobile)\n    })\n\n    return $container\n  }\n\n  private _generateAction (label: string, icon: string|null, buttonClasses?: string): JQuery {\n    const isButton = typeof buttonClasses !== 'undefined'\n    const lowerCaseLabel = label.toLowerCase()\n    icon ??= lowerCaseLabel\n    const $action = $(`<${isButton ? 'button' : 'a'}/>`)\n      .attr({\n        'aria-label': label,\n        'data-bba-bn': `button.${lowerCaseLabel}`,\n        'data-icon': icon\n      })\n      .text(label)\n\n    if (isButton) {\n      $action.addClass(buttonClasses)\n    }\n\n    return $action\n  }\n\n  protected abstract getSelectedBlocks (): InputBlock[]\n\n  public expand (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.expand())\n  }\n\n  public collapse (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.collapse())\n  }\n\n  public abstract enable (blocks: InputBlock[]): void\n\n  public abstract disable (blocks: InputBlock[]): void\n\n  public abstract delete (blocks: InputBlock[]): void\n}\n\nclass MatrixBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: InputField) {\n    super(input, 'matrixblock', 'sel')\n    super.addBlockEvent = 'blockAdded'\n  }\n\n  protected getSelectedBlocks (): MatrixInputBlock[] {\n    return this.input.$container\n      .find(`.${this.blockClass}.${this.blockSelectedClass}`)\n      .map((_, blockEl) => $(blockEl).data('block'))\n      .get()\n  }\n\n  public enable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.enable())\n  }\n\n  public disable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.disable())\n  }\n\n  public delete (blocks: MatrixInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => block.selfDestruct())\n    }\n  }\n}\n\nclass NeoBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: NeoInputField) {\n    super(input, 'ni_block', 'is-selected')\n    super.addBlockEvent = 'addBlock'\n  }\n\n  protected getSelectedBlocks (): NeoInputBlock[] {\n    return this.input.getBlocks().filter((block) => block.isSelected())\n  }\n\n  public enable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => !block.isEnabled())?.enable()\n  }\n\n  public disable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => block.isEnabled())?.disable()\n  }\n\n  public delete (blocks: NeoInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => this.input.removeBlock(block))\n    }\n  }\n}\n\nexport { MatrixBatchActionBar, NeoBatchActionBar }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { MatrixBatchActionBar, NeoBatchActionBar } from './BlockBatchActionBar'\nimport { InputField, NeoInputField } from './types/InputField'\nimport '../styles/main.scss'\n\ninterface MatrixAfterInitEvent {\n  target: InputField\n}\n\ninterface NeoAfterInitEvent {\n  target: NeoInputField\n}\n\nconst actionBars = []\n\nGarnish.on(Craft.MatrixInput, 'afterInit', (e: MatrixAfterInitEvent) => {\n  actionBars.push(new MatrixBatchActionBar(e.target))\n})\n\nif (typeof Neo?.Input !== 'undefined') {\n  Garnish.on(Neo.Input, 'afterInit', (e: NeoAfterInitEvent) => {\n    actionBars.push(new NeoBatchActionBar(e.target))\n  })\n}\n"],"names":["BlockBatchActionBar","constructor","input","blockClass","blockSelectedClass","this","$bar","$","prependTo","$container","$selectCheckbox","_generateSelectCheckbox","appendTo","$buttons","_generateButtons","$menuContainer","_generateMenu","$actions","add","$menu","find","on","e","preventDefault","expand","getSelectedBlocks","collapse","enable","disable","delete","supportedActions","$checkbox","handlingCheckbox","initialised","which","Garnish","PRIMARY_CLICK","addBlockEvent","$block","block","addClass","blockSelect","settings","selectedClass","toggleClass","hasClass","selectAll","deselectAll","_","removeClass","forEach","label","icon","_generateAction","$button","$ul","append","menubtn","buttonsWidth","width","isMobile","buttonClasses","isButton","lowerCaseLabel","toLowerCase","$action","attr","text","blocks","MatrixBatchActionBar","super","map","blockEl","data","get","window","confirm","selfDestruct","NeoBatchActionBar","getBlocks","filter","isSelected","isEnabled","removeBlock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","actionBars","Craft","MatrixInput","push","target","Neo","Input"],"sourceRoot":""}