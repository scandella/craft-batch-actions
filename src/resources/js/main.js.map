{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://craft-block-batch-actions/./client/src/scripts/BlockBatchActionBar.ts","webpack://craft-block-batch-actions/webpack/bootstrap","webpack://craft-block-batch-actions/./client/src/scripts/main.ts"],"sourcesContent":["import { InputBlock, MatrixInputBlock, NeoInputBlock } from './types/InputBlock'\nimport { InputField, NeoInputField } from './types/InputField'\n\ninterface ActivateEvent {\n  preventDefault: () => void\n}\n\nabstract class BlockBatchActionBar {\n  constructor (\n    public readonly input: InputField,\n    protected readonly blockClass: string,\n    protected readonly blockSelectedClass: string\n  ) {\n    const $buttons = this.generateButtons().prependTo(input.$container)\n    $buttons.find('[data-bba-bn=\"button.expand\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.expand(this.getSelectedBlocks())\n    })\n    $buttons.find('[data-bba-bn=\"button.collapse\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.collapse(this.getSelectedBlocks())\n    })\n    $buttons.find('[data-bba-bn=\"button.enable\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.enable(this.getSelectedBlocks())\n    })\n    $buttons.find('[data-bba-bn=\"button.disable\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.disable(this.getSelectedBlocks())\n    })\n    $buttons.find('[data-bba-bn=\"button.delete\"]').on('activate', (e: ActivateEvent) => {\n      e.preventDefault()\n      this.delete(this.getSelectedBlocks())\n    })\n  }\n\n  protected generateButtons (): JQuery {\n    const generateButton: (label: string, icon?: string) => JQuery = (label, icon) => {\n      const lowerCaseLabel = label.toLowerCase()\n      icon ??= lowerCaseLabel\n\n      return $('<button/>')\n        .attr({\n          'aria-label': label,\n          'data-bba-bn': `button.${lowerCaseLabel}`,\n          'data-icon': icon\n        })\n        .addClass('btn dashed')\n        .text(label)\n    }\n\n    const $expand = generateButton('Expand')\n    const $collapse = generateButton('Collapse')\n    const $enable = generateButton('Enable', 'enabled')\n    const $disable = generateButton('Disable', 'disabled')\n    const $delete = generateButton('Delete', 'remove')\n    const $bar = $('<div class=\"block-batch-action-bar btngroup\"/>')\n      .append($expand)\n      .append($collapse)\n      .append($enable)\n      .append($disable)\n      .append($delete)\n\n    return $bar\n  }\n\n  protected abstract getSelectedBlocks (): InputBlock[]\n\n  public expand (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.expand())\n  }\n\n  public collapse (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.collapse())\n  }\n\n  public abstract enable (blocks: InputBlock[]): void\n\n  public abstract disable (blocks: InputBlock[]): void\n\n  public abstract delete (blocks: InputBlock[]): void\n}\n\nclass MatrixBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: InputField) {\n    super(input, 'matrixblock', 'sel')\n  }\n\n  protected getSelectedBlocks (): MatrixInputBlock[] {\n    return this.input.$container\n      .find(`.${this.blockClass}.${this.blockSelectedClass}`)\n      .map((_, blockEl) => $(blockEl).data('block'))\n      .get()\n  }\n\n  public enable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.enable())\n  }\n\n  public disable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.disable())\n  }\n\n  public delete (blocks: MatrixInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => block.selfDestruct())\n    }\n  }\n}\n\nclass NeoBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: NeoInputField) {\n    super(input, 'ni_block', 'is-selected')\n  }\n\n  protected getSelectedBlocks (): NeoInputBlock[] {\n    return this.input.getBlocks().filter((block) => block.isSelected())\n  }\n\n  public enable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => !block.isEnabled())?.enable()\n  }\n\n  public disable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => block.isEnabled())?.disable()\n  }\n\n  public delete (blocks: NeoInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => this.input.removeBlock(block))\n    }\n  }\n}\n\nexport { MatrixBatchActionBar, NeoBatchActionBar }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { MatrixBatchActionBar, NeoBatchActionBar } from './BlockBatchActionBar'\nimport { InputField, NeoInputField } from './types/InputField'\n\ninterface MatrixAfterInitEvent {\n  target: InputField\n}\n\ninterface NeoAfterInitEvent {\n  target: NeoInputField\n}\n\nconst actionBars = []\n\nGarnish.on(Craft.MatrixInput, 'afterInit', (e: MatrixAfterInitEvent) => {\n  actionBars.push(new MatrixBatchActionBar(e.target))\n})\n\nif (typeof Neo?.Input !== 'undefined') {\n  Garnish.on(Neo.Input, 'afterInit', (e: NeoAfterInitEvent) => {\n    actionBars.push(new NeoBatchActionBar(e.target))\n  })\n}\n"],"names":["BlockBatchActionBar","constructor","input","blockClass","blockSelectedClass","$buttons","this","generateButtons","prependTo","$container","find","on","e","preventDefault","expand","getSelectedBlocks","collapse","enable","disable","delete","generateButton","label","icon","lowerCaseLabel","toLowerCase","$","attr","addClass","text","$expand","$collapse","$enable","$disable","$delete","append","blocks","forEach","block","MatrixBatchActionBar","super","map","_","blockEl","data","get","window","confirm","selfDestruct","NeoBatchActionBar","getBlocks","filter","isSelected","isEnabled","removeBlock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","actionBars","Garnish","Craft","MatrixInput","push","target","Neo","Input"],"sourceRoot":""}