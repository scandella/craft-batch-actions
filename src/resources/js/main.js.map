{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://craft-block-batch-actions/./client/src/scripts/BlockBatchActionBar.ts","webpack://craft-block-batch-actions/webpack/bootstrap","webpack://craft-block-batch-actions/webpack/runtime/make namespace object","webpack://craft-block-batch-actions/./client/src/scripts/main.ts"],"sourcesContent":["import { InputBlock, MatrixInputBlock, NeoInputBlock } from './types/InputBlock'\nimport { InputField, NeoInputField } from './types/InputField'\n\ninterface ActivateEvent {\n  preventDefault: () => void\n}\n\nabstract class BlockBatchActionBar {\n  public $bar: JQuery\n  public $selectCheckbox: JQuery\n  public $buttons: JQuery\n  public $menuContainer: JQuery\n  public $menu: JQuery\n  protected addBlockEvent: string\n  private _$buttons: Record<string, JQuery> = {}\n\n  constructor (\n    public readonly input: InputField,\n    protected readonly blockClass: string,\n    protected readonly blockSelectedClass: string\n  ) {\n    this.$bar = $('<div class=\"block-batch-action-bar\"/>').prependTo(input.$container)\n    this.$selectCheckbox = this._initSelection().appendTo(this.$bar)\n    this.$buttons = this._generateButtons().appendTo(this.$bar)\n    this.$menuContainer = this._generateMenu().appendTo(this.$bar)\n\n    const $actions = this.$bar.add(this.$menu)\n\n    this.supportedActions().forEach(([label, _icon, _check]) => {\n      const lowerCaseLabel = label.toLowerCase()\n      this._$buttons[lowerCaseLabel] = $actions.find(`[data-bba-bn=\"button.${lowerCaseLabel}\"]`)\n      this._$buttons[lowerCaseLabel].on('activate', (e: ActivateEvent) => {\n        e.preventDefault()\n        const actionMethod = this[lowerCaseLabel as keyof BlockBatchActionBar]\n\n        if (typeof actionMethod === 'function') {\n          actionMethod(this.getSelectedBlocks())\n          this._refreshButtons()\n        }\n      })\n    })\n\n    this._refreshButtons()\n  }\n\n  protected supportedActions (): Array<[string, string, Function]> {\n    return [\n      ['Expand', 'expand', this.isBlockCollapsed.bind(this)],\n      ['Collapse', 'collapse', this.isBlockExpanded.bind(this)],\n      ['Enable', 'enabled', this.isBlockDisabled.bind(this)],\n      ['Disable', 'disabled', this.isBlockEnabled.bind(this)],\n      ['Delete', 'remove', (_: JQuery) => true]\n    ]\n  }\n\n  protected abstract isBlockExpanded ($block: JQuery): boolean\n\n  protected isBlockCollapsed ($block: JQuery): boolean {\n    return !this.isBlockExpanded($block)\n  }\n\n  protected abstract isBlockEnabled ($block: JQuery): boolean\n\n  protected isBlockDisabled ($block: JQuery): boolean {\n    return !this.isBlockEnabled($block)\n  }\n\n  private _initSelection (): JQuery {\n    const $checkbox = $('<div class=\"checkbox\">')\n    let handlingCheckbox = false\n    let initialised = false\n\n    $checkbox.on('mousedown', (e) => {\n      if (e.which === Garnish.PRIMARY_CLICK) {\n        if (!initialised) {\n          // Initialise the add block event\n          this.input.on(this.addBlockEvent, (e: any) => {\n            const $block = e.$block ?? e.block.$container\n            $block.addClass(this.input.blockSelect.settings.selectedClass)\n          })\n          initialised = true\n        }\n\n        handlingCheckbox = true\n        $checkbox.toggleClass('checked')\n        const selectAll = $checkbox.hasClass('checked')\n\n        if (selectAll) {\n          this.input.blockSelect.selectAll()\n        } else {\n          this.input.blockSelect.deselectAll()\n        }\n      }\n    })\n\n    this.input.blockSelect.on('selectionChange', (_: Event) => {\n      if (!handlingCheckbox) {\n        // Any manual change to block selection invalidates the select all state\n        $checkbox.removeClass('checked')\n      } else {\n        // Set our checkbox handling as being complete\n        handlingCheckbox = false\n      }\n\n      this._refreshButtons()\n    })\n\n    return $checkbox\n  }\n\n  private _refreshButtons (): void {\n    const actions: Record<string, any> = {}\n    const labels: string[] = []\n\n    this.supportedActions().forEach(([label, icon, check]) => {\n      labels.push(label)\n      actions[label] = {\n        icon,\n        check,\n        enable: false\n      }\n    })\n\n    this.input.blockSelect.$selectedItems.each((_: number, block: HTMLElement) => {\n      const $block = $(block)\n      labels.forEach((label) => {\n        actions[label].enable ||= actions[label].check($block)\n      })\n    })\n\n    labels.forEach((label) => {\n      this._$buttons[label.toLowerCase()].toggleClass('disabled', actions[label].enable === false)\n    })\n  }\n\n  private _generateButtons (): JQuery {\n    const $bar = $('<div class=\"btngroup\"/>')\n    this.supportedActions()\n      .forEach(([label, icon, _]) => this._generateAction(label, icon, 'btn').appendTo($bar))\n\n    return $bar\n  }\n\n  private _generateMenu (): JQuery {\n    const $container = $('<div class=\"block-batch-action-bar_menu hidden\"/>')\n    const $button: any = $('<button type=\"button\" class=\"btn settings icon menubtn\">Actions</button>')\n      .appendTo($container)\n    this.$menu = $('<div class=\"menu\"/>')\n      .appendTo($container)\n    const $ul = $('<ul class=\"padded\"/>')\n      .appendTo(this.$menu)\n\n    this.supportedActions()\n      .forEach(([label, icon]) => $('<li/>').append(this._generateAction(label, icon)).appendTo($ul))\n\n    $button.menubtn()\n    let buttonsWidth = this.$buttons.width() ?? 0\n    this.$bar.on('resize', () => {\n      buttonsWidth ||= this.$buttons.width() ?? 0\n      const isMobile = (this.$bar.width() ?? 0) < buttonsWidth\n      this.$buttons.toggleClass('hidden', isMobile)\n      $container.toggleClass('hidden', !isMobile)\n    })\n\n    return $container\n  }\n\n  private _generateAction (label: string, icon: string|null, buttonClasses?: string): JQuery {\n    const isButton = typeof buttonClasses !== 'undefined'\n    const lowerCaseLabel = label.toLowerCase()\n    icon ??= lowerCaseLabel\n    const $action = $(`<${isButton ? 'button' : 'a'}/>`)\n      .attr({\n        'aria-label': label,\n        'data-bba-bn': `button.${lowerCaseLabel}`,\n        'data-icon': icon\n      })\n      .text(label)\n\n    if (isButton) {\n      $action.addClass(buttonClasses)\n    }\n\n    return $action\n  }\n\n  protected abstract getSelectedBlocks (): InputBlock[]\n\n  public expand (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.expand())\n  }\n\n  public collapse (blocks: InputBlock[]): void {\n    blocks.forEach((block) => block.collapse())\n  }\n\n  public abstract enable (blocks: InputBlock[]): void\n\n  public abstract disable (blocks: InputBlock[]): void\n\n  public abstract delete (blocks: InputBlock[]): void\n}\n\nclass MatrixBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: InputField) {\n    super(input, 'matrixblock', 'sel')\n    super.addBlockEvent = 'blockAdded'\n  }\n\n  protected isBlockExpanded ($block: JQuery): boolean {\n    return !$block.hasClass('collapsed')\n  }\n\n  protected isBlockEnabled ($block: JQuery): boolean {\n    return !$block.hasClass('disabled')\n  }\n\n  protected getSelectedBlocks (): MatrixInputBlock[] {\n    return this.input.$container\n      .find(`.${this.blockClass}.${this.blockSelectedClass}`)\n      .map((_, blockEl) => $(blockEl).data('block'))\n      .get()\n  }\n\n  public enable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.enable())\n  }\n\n  public disable (blocks: MatrixInputBlock[]): void {\n    blocks.forEach((block) => block.disable())\n  }\n\n  public delete (blocks: MatrixInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => block.selfDestruct())\n    }\n  }\n}\n\nclass NeoBatchActionBar extends BlockBatchActionBar {\n  constructor (public readonly input: NeoInputField) {\n    super(input, 'ni_block', 'is-selected')\n    super.addBlockEvent = 'addBlock'\n  }\n\n  protected isBlockExpanded ($block: JQuery): boolean {\n    return $block.hasClass('is-expanded')\n  }\n\n  protected isBlockEnabled ($block: JQuery): boolean {\n    return $block.hasClass('is-enabled')\n  }\n\n  protected getSelectedBlocks (): NeoInputBlock[] {\n    return this.input.getBlocks().filter((block) => block.isSelected())\n  }\n\n  public enable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => !block.isEnabled())?.enable()\n  }\n\n  public disable (blocks: NeoInputBlock[]): void {\n    blocks.find((block) => block.isEnabled())?.disable()\n  }\n\n  public delete (blocks: NeoInputBlock[]): void {\n    if (window.confirm('Are you sure you want to delete the selected blocks?')) {\n      blocks.forEach((block) => this.input.removeBlock(block))\n    }\n  }\n}\n\nexport { MatrixBatchActionBar, NeoBatchActionBar }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { MatrixBatchActionBar, NeoBatchActionBar } from './BlockBatchActionBar'\nimport { InputField, NeoInputField } from './types/InputField'\nimport '../styles/main.scss'\n\ninterface MatrixAfterInitEvent {\n  target: InputField\n}\n\ninterface NeoAfterInitEvent {\n  target: NeoInputField\n}\n\nconst actionBars = []\n\nGarnish.on(Craft.MatrixInput, 'afterInit', (e: MatrixAfterInitEvent) => {\n  actionBars.push(new MatrixBatchActionBar(e.target))\n})\n\nif (typeof Neo?.Input !== 'undefined') {\n  Garnish.on(Neo.Input, 'afterInit', (e: NeoAfterInitEvent) => {\n    actionBars.push(new NeoBatchActionBar(e.target))\n  })\n}\n"],"names":["BlockBatchActionBar","constructor","input","blockClass","blockSelectedClass","_$buttons","this","$bar","$","prependTo","$container","$selectCheckbox","_initSelection","appendTo","$buttons","_generateButtons","$menuContainer","_generateMenu","$actions","add","$menu","supportedActions","forEach","label","_icon","_check","lowerCaseLabel","toLowerCase","find","on","e","preventDefault","actionMethod","getSelectedBlocks","_refreshButtons","isBlockCollapsed","bind","isBlockExpanded","isBlockDisabled","isBlockEnabled","_","$block","$checkbox","handlingCheckbox","initialised","which","Garnish","PRIMARY_CLICK","addBlockEvent","block","addClass","blockSelect","settings","selectedClass","toggleClass","hasClass","selectAll","deselectAll","removeClass","actions","labels","icon","check","push","enable","$selectedItems","each","_generateAction","$button","$ul","append","menubtn","buttonsWidth","width","isMobile","buttonClasses","isButton","$action","attr","text","expand","blocks","collapse","MatrixBatchActionBar","super","map","blockEl","data","get","disable","delete","window","confirm","selfDestruct","NeoBatchActionBar","getBlocks","filter","isSelected","isEnabled","removeBlock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","actionBars","Craft","MatrixInput","target","Neo","Input"],"sourceRoot":""}